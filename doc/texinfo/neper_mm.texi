@node Module -MM
@chapter Tessellation Mapped Meshing: neper -MM

@MMM{} is the module to generate a mapped mesh of a tessellation, that
is, a mesh comprised of regular, brick elements.  Such a mesh does not
conform exactly to the tessellation morphology: the interfacial
features, and more particularly the grain boundaries and triple lines,
have stepped shapes.  The input file is a tessellation file
(@file{.tess}) of a voxel file (@file{.vox}). The output mesh can be
written in several formats.

The level of mesh density is specified a bit differently than in @mFM{}.
This is done through the following parameter:

@itemize
@item The number of elements along one dimension of the domain
(@code{msize}).  For a non-cubic domain, an average, equivalent length of
the domain is considered so as to get cubic elements. The number of
elements along each of the directions of the domain can also be
specified explicitly (option @option{-msize3}).

@end itemize

In the output mesh, the grains are described by element sets.  Node sets
of the faces, the edges and the vertices of the surface of the
tessellation are also provided for prescribing the boundary conditions
(option @option{-nset}).  The surface element sets (squares) are also
provided (option @option{-faset}).  The mesh order can be 1 or 2,
corresponding to 8-node cubic elements and 20-node cubic elements,
respectively (option @option{-order}).  

@sp 1
Here is what a typical run of @mMM{} looks like:

@c typical_start
@verbatim 
    $ neper -MM n10-id1.tess
    
    ========================    N   e   p   e   r    =======================
    Info   : A 3D random polycrystal generator for the finite element method
    Info   : Version ...
    Info   : Compiled with: gsl libmatheval
    Info   : Ignoring initialization file.
    Info   : ---------------------------------------------------------------
    Info   : MODULE -MM loaded with arguments:
    Info   : [ini file] (none)
    Info   : [com line] n10-id1.tess
    Info   : ---------------------------------------------------------------
    Info   : Mapped meshing ...
    Info   :   - Loading tessellation ...
    Info   :     [i] Parsing file `n10-id1.tess' ...
    Info   :     [i] Parsed file `n10-id1.tess'.
    Info   :   - Generating mesh ...
    Info   :   - Searching elsets ...  100%
    Info   : Writing results ...
    Info   :   - Writing mesh results ...
    Info   :     [o] Writing file `n10-id1.msh' ...
    Info   :     [o] Wrote file `n10-id1.msh'.
    Info   : Elapsed time: ... secs.
    ========================================================================
    
@end verbatim
@c typical_end

@section Arguments

@subsection Input Data

@inp{,file_name,
Name of the input file@comma{} which can be either a
tessellation file (@file{.tess}) or a 
voxel file (@file{.vox}).
,
any,none}

@subsection Meshing Options

@opt{-msize,integer,
Specify the mesh size (number of elements per unit length).,
any,20}

@optsec{-msize3,integer integer integer,
Specify the mesh size (number of elements per unit length) along the
x@comma{} y and z directions.,
any,20 20 20}

@opt{-order,integer,
Specify the mesh order.,
1 to 2,1}

@subsection Mesh Cleaning Options

These options are specific to meshing from voxel data.  They have no
effect on meshing from a tessellation file.

@optsec{-clean,integer,
Clean mesh so that the mesh consists of a set of connected
elements. Provide as argument the level of cleaning.
A value of @code{1} indicates that two elements should be considered
connected to each other if they share at least a vertex. 
A value of @code{2} indicates that two elements should be considered
connected to each other if they share at least a face. 
Using this option@comma{} the elements (or bunch of elements) that are
not connected to the main skeleton are removed.
,
0 to 2,0}

@optsec{-singnodedup,logical,
Duplicate nodes which are the subject of singularity.  Such a node
belongs to several elements which share only a node or an
edge@comma{} which provides a singularity behaviour.  In
thermics@comma{} this corresponds to imposing a given temperature at a
particular location shared by two bodies@comma{} but not enabling heat
flux to operate at that location (since the surface is zero).  In
mechanics@comma{} this corresponds to imposing a common
displacement@comma{} while the point can carry no stress.
When this option is enabled@comma{}
such a node is duplicated@comma{} so that each body has its own node. 
,
0 or 1,0}

@subsection Output Options

@opt{-o,file_name,
Specify output file name.,
any,none}

@opt{-outdim,char_string,
Specify the dimensions of the mesh to output. It can go from 0 to
3@comma{} for point to volume elements (combine with commas).,
0@comma{} 1@comma{} 2@comma{} 3,
3}

@opt{-nset, char_string,
Specify the node sets to provide@comma{} among:
@code{faces}@comma{} @code{edges}@comma{} @code{vertices} for all
domain faces@comma{} edges and vertices@comma{}
and @code{facebodies} and @code{edgebodies} for all face and edge
bodies. To get all of them@comma{} provide @code{all}.
To get the nset corresponding to individual entities@comma{}
provide their names@comma{} that is@comma{} for a cubic domain@comma{}
@code{[x-z][0@comma{}1]} for the
domain faces@comma{} @code{[x-z][0@comma{}1][x-z][0@comma{}1]} for the
edges@comma{} and
@code{[x-z][0@comma{}1][x-z][0@comma{}1][x-z][0@comma{}1]} for the
vertices.  Append @samp{body} to the name to get only the body nodes of
the sets. Combine them with commas.
,
any, faces}

@opt{-faset, char_string,
Specify the domain surfaces to provide. Use @samp{faces} for all faces.
Combine them with commas.
,
faces@comma{} [x-z][0@comma{}1],none}

@section Output Files

@subsection Mesh

The mesh can be written in the following formats:

@itemize
@item Gmsh format: @file{.msh}

@item Abaqus format: file @file{.inp}

@item Zset/Z@'ebulon format: @file{.geof}
@end itemize

@section Examples

Below are some examples of use of neper -MM.  Illustrations can be found
at @url{http://neper.sourceforge.net/neper_mm.html}.

@enumerate
@c Example_beg
@item    Mesh tessellation n100-id1.tess.
@com{neper -MM n100-id1.tess}
@item    Mesh tessellation n100-id1.tess with 40 elements per unit length.
@com{neper -MM n100-id1.tess -msize 40}
@c Example_end
@end enumerate
